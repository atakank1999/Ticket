@model Ticket.ViewModels.ReplyWithSelectlist

@{
    ViewBag.Title = "Reply";
}
<h2>Yanıt Yaz</h2>
<hr />
<div class="container-fluid mb-5">
    <div class="col-md-7 border border-default rounded shadow-sm">
        <h1>@Model.Reply.RepliedTicket.Title</h1>
        <h4 class="text-right">Önceliği: @Model.Reply.RepliedTicket.Priority</h4>
        <h5 class="text-right">Tipi: @Model.Reply.RepliedTicket.Type</h5>

        <blockquote class="blockquote ">
            <p class="pl-2 ">@Model.Reply.RepliedTicket.Text </p>
            <footer class="blockquote-footer text-right"><cite> <small>@Model.Reply.RepliedTicket.Author.Username</small> </cite> </footer>
        </blockquote>
        <div class="row">
            <div class="col-6">
                @if (!Model.Reply.RepliedTicket.FilePath.IsEmpty())
                {
                    <button class="btn btn-icon btn-outline-primary">
                        <span class="btn-inner--icon"><i class="ni ni-cloud-download-95"></i></span>
                        @Html.ActionLink(Path.GetFileName(Model.Reply.RepliedTicket.FilePath).ToString(), "Download", new { id = Model.Reply.RepliedTicket.Id }, new { @class = "btn-inner--text" })
                    </button>

                }
            </div>
            <div class="col-6">
                <p class="text-right ">

                    <small class="text-danger">
                        @if (Model.Reply.RepliedTicket.assignedTo != null)
                        {
                            @(Model.Reply.RepliedTicket.assignedTo.Admin.Username + "'ya atandı")
                            <br />
                            if (Model.Reply.RepliedTicket.assignedTo.Deadline != default(DateTime))
                            {
                                @(Model.Reply.RepliedTicket.assignedTo.Deadline.ToString("f") + " Son tarih")

                            }

                        }
                        <p class="text-right">
                            <small>Durumu:</small>
                            <small>@Model.Reply.RepliedTicket.Status</small>
                        </p>
                    </small>
                </p>
            </div>
        </div>
    </div>
</div>
<hr />
<div class="container-fluid">
    <div class="row">
        <div class="col-7 ml-auto">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    <div class="form-group ">
                        @Html.LabelFor(model => model.Reply.Text, "Yanıtınız", htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col ml-auto">
                            @Html.TextAreaFor(model => model.Reply.Text, 10, 300, new {@class = "form-control ", style = "width: 100%; max-width: 100%;",placeholder = "Yanıtınızı buraya yazınız" } )
                            @Html.ValidationMessageFor(model => model.Reply.Text, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.DropDownListFor(x => x.Reply.RepliedTicket.Status, Model.SelectListItems, "Durumunu Seçiniz", new {@class = "form-control form-control-lg"})
                        </div>
                        <div class="form-group col-md-6">

                            @Html.DropDownListFor(x => x.Reply.RepliedTicket.Priority, Model.SelecListStatus, "Önemini Seçiniz", new {@class = "form-control form-control-lg"})
                        </div>
                    </div>

                    <div class="form-group float-right">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Yanıtla" class="btn btn-default"/>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>



</div>
