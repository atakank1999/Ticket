@using Ticket.Models
@model Ticket

<a href="/Tickets" class="btn btn-icon btn-outline-danger mb-2">
    <span class="btn-inner--icon">
        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-arrow-left-circle" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
            <path fill-rule="evenodd" d="M12 8a.5.5 0 0 1-.5.5H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5z" />
        </svg>
    </span>
    <span class="btn-inner--text ">
        Tüm biletleri gör
    </span>
</a>

<div class="container-fluid mt-2">

    <div class="row mt-2 ">
        <div class="col-md-8 border rounded align-self-center bg-white">

            <div class="row">
                <div class="col-md-9">
                    <h2>@Model.Title</h2>
                    <p>@Model.Text</p>
                    @if (!Model.FilePath.IsEmpty())
                    {
                        <button class="btn btn-icon btn-outline-primary">
                            <span class="btn-inner--icon"><i class="ni ni-cloud-download-95"></i></span>
                            @Html.ActionLink(Path.GetFileName(Model.FilePath).ToString(), "Download", "Tickets", new { id = Model.Id }, new { @class = "btn-inner--text" })
                        </button>

                    }
                </div>
                <div class="col-md-3 border-left">
                    <div class="dropdown float-right text-right">
                        <button class="btn btn-icon dropdown btn-sm " type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="btn-inner--icon"><i class="ni ni-settings-gear-65"></i></span>
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">

                            <a class="dropdown-item" href="~/Tickets/EditTicket/@Model.Id">
                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-pencil-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                                </svg>Düzenle
                            </a>

                            <!-- Button trigger modal -->
                            <button type="button" class="dropdown-item" data-toggle="modal" data-target="#exampleModal" data-title="@Model.Title" data-id="@Model.Id">
                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-trash-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z" />
                                </svg> Sil
                            </button>

                            <!-- Modal -->
                        </div>
                    </div>
                    <br />
                    <br />
                    <p class="text-right">

                        <span class="text-right"><small>@Model.DateTime.ToString("d")</small></span> <br />
                        @if (Model.DateTime.Date != Model.EditedOn.Date)
                        {
                            <small><i>@("Düzenlenme Tarihi : " + Model.EditedOn.ToString("d"))</i> </small>
                        }
                    </p>
                    <br />

                    <p class="text-right">Bilet Tipi : @Model.Type</p>
                    <p class="text-right text-danger">@Model.Status</p>
                </div>
            </div>
        </div>
        <div class="col-md-5">
        </div>
    </div>
    @foreach (Reply r in Model.Replies)
    {
        <div class="row mt-2 ">
            <div class="col-md-4"></div>
            <div class="col-md-8 border rounded bg-success">
                <blockquote class="blockquote ">
                    <p class="pl-2 ">@r.Text </p>
                    <footer class="blockquote-footer text-right"><cite> <small>@r.WriterAdmin.Username @r.date.ToLocalTime().ToString("g") tarihinde yanıtladı</small> </cite> </footer>
                </blockquote>
            </div>
        </div>
    }
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Bu başlıklı ticket silinecek</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Silmek istediğinize emin misiniz ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Silme</button>
                <a href=""> <button type="button" class="btn btn-success">Sil</button></a>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $('#exampleModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var recipient = button.data('title')
            var id = button.data('id')// Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            var modal = $(this)
            modal.find('.modal-title').text('Şu başlıklı Ticket Silinecek : ' + recipient)
            modal.find('.modal-footer a').attr("href", "/Tickets/Delete/" + id)
        })
    </script>
}