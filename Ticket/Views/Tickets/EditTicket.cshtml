@using System.Web.UI.WebControls
@model Ticket.Models.Ticket

@{
    ViewBag.Title = "EditTicket";
}


@using (Html.BeginForm("EditTicket","Tickets",new{id = @Model.Id}, FormMethod.Post,new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group mb-3">
            <div class="col-md-10">
                <div class="custom-file">
                    <label for="file">Eklenecek Dosyayı Seçiniz</label>
                    <input type="file" class="form-control-file" id="file" name="file">
                    <br />
                    
                    @if (!Model.FilePath.IsEmpty())
                    {
                        <p>Şuan Yüklü Olan Dosyayı İndirmek İçin : </p>
                        <button class="btn btn-icon btn-outline-primary">
                            <span class="btn-inner--icon"><i class="ni ni-cloud-download-95"></i></span>
                            @Html.ActionLink(Path.GetFileName(Model.FilePath).ToString(), "Download", "Tickets", new { id = Model.Id }, new { @class = "btn-inner--text" })
                        </button>

                    }

                </div>
                <p class="text-danger">@ViewBag.file</p>

            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Güncelle" class="btn btn-default" />
            </div>
        </div>
        <p class="text-@ViewBag.status">@ViewBag.result</p>
    </div>
}

